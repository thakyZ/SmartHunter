<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"

                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:pfComponentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
                    xmlns:wbComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"

                    xmlns:converters="clr-namespace:SmartHunter.Ui.Converters"
                    xmlns:coreData="clr-namespace:SmartHunter.Core.Data"
                    xmlns:data="clr-namespace:SmartHunter.Game.Data"
                    xmlns:widgetContexts="clr-namespace:SmartHunter.Game.Data.WidgetContexts"
                    xmlns:Windows="clr-namespace:SmartHunter.Ui.Windows"
                    mc:Ignorable="d"
                    >

  <!--Base Resources-->

  <converters:AngleToIsLargeArcConverter x:Key="A_Converter_AngleToIsLargeArc" />
  <converters:AngleToPointConverter x:Key="A_Converter_AngleToPoint" />
  <converters:PlayerToPlayerIndexConverter x:Key="A_Converter_PlayerToPlayerIndex" />
  <converters:FractionToPercentageConverter x:Key="A_Converter_FractionToPercentage" />
  <converters:BoolToVisibilityConverter x:Key="A_Converter_BoolToVisibility" />
  <converters:LocalizerConverter x:Key="A_Converter_Localizer" />
  <converters:NumberComparisonConverter x:Key="A_Converter_NumberGreater" Comparison="Greater" />
  <converters:NumberComparisonConverter x:Key="A_Converter_NumberNotEqual" Comparison="NotEqual" />
  <converters:EnumComparisonConverter x:Key="A_Converter_EnumComparison" />
  <converters:ColorTransformConverter x:Key="A_Converter_BackgroundColorTransform" SaturationAdjustment="-0.8" BrightnessAdjustment="0.66" OpacityOverride="0.3" />
  <converters:ColorTransformConverter x:Key="A_Converter_BackgroundColorTransform1" SaturationAdjustment="-1" BrightnessAdjustment="0.5" OpacityOverride="0.5" />
  <converters:StringFormatConverter x:Key="A_Converter_StringFormat" />
  <converters:NumberToCenteredMarginConverter x:Key="A_Converter_NumberToCenteredMargin" />
  <converters:WeaponTypeToNameConverter x:Key="A_Converter_WeaponTypeToName" />

  <Color x:Key="A_Color_Widget_Background">#00000000</Color>

  <system:Double x:Key="A_Double_Widget_Opacity">0.8</system:Double>

  <Color x:Key="A_Color_Player_0">#F25022</Color>
  <Color x:Key="A_Color_Player_1">#00A4EF</Color>
  <Color x:Key="A_Color_Player_2">#FFB900</Color>
  <Color x:Key="A_Color_Player_3">#7FBA00</Color>

  <system:String x:Key="My_HunterName">Your Hunter name</system:String>

  <system:Double x:Key="TeamWidget_length">265</system:Double>
  <system:Double x:Key="MonsterWidget_length">345</system:Double>

  <Color x:Key="A_Color_Monster_Bar">#aa1e1e</Color>

  <Color x:Key="A_Color_Monster_Part_Bar">#ff8732</Color>
  <Color x:Key="A_Color_Monster_Part_Group_Part">#ff8732</Color>
  <Color x:Key="A_Color_Monster_Part_Group_Removable">#ff8732</Color>

  <Color x:Key="A_Color_Monster_StatusEffect_Bar">#00CCCC</Color>
  <Color x:Key="A_Color_Monster_StatusEffect_Group_StatusEffect">#00CCCC</Color>
  <Color x:Key="A_Color_Monster_StatusEffect_Group_Rage">#cc0000</Color>
  <Color x:Key="A_Color_Monster_StatusEffect_Group_Stamina">#cccc00</Color>
  <Color x:Key="A_Color_Monster_StatusEffect_Group_Fatigue">#00cc00</Color>

  <Color x:Key="A_Color_PlayerStatusEffect_Group_Debuff">#f7b2ad</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Equipment">#a7e3b7</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Equipment_RECHARGE">#277d3e</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Buff">#b3cefb</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Horn">#fde39b</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Coral">#fde39b</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Weapon">#bfbfbf</Color>

  <Color x:Key="A_Color_PlayerStatusEffect_Group_Debuff_Circle">#c42114</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Equipment_Circle">#277d3e</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Equipment_RECHARGE_Circle">#a7e3b7</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Buff_Circle">#0d5bdb</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Horn_Circle">#bd8c03</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Coral_Circle">#bd8c03</Color>
  <Color x:Key="A_Color_PlayerStatusEffect_Group_Weapon_Circle">#a5a5a5</Color>

  <Color x:Key="A_Color_Crown_Mini_Body">#eed000</Color>
  <Color x:Key="A_Color_Crown_Mini_Gem">#00dd00</Color>
  <Color x:Key="A_Color_Crown_Gold_Body">#eed000</Color>
  <Color x:Key="A_Color_Crown_Gold_Gem">#dd0000</Color>
  <Color x:Key="A_Color_Crown_Silver_Body">#eeeeee</Color>
  <Color x:Key="A_Color_Crown_Silver_Gem">#dd0000</Color>

  <Color x:Key="A_Color_DropShadow">#dd000000</Color>
  <SolidColorBrush x:Key="A_Brush_DropShadow" Color="{StaticResource A_Color_DropShadow}" />

  <TransformGroup x:Key="A_Transform_DropShadow">
    <TranslateTransform X="1.5" Y="1.5" />
  </TransformGroup>

  <FontFamily x:Key="Default">file:\\\C:\Windows\Fonts\#Berlrin Sans FB</FontFamily>
  <Style x:Key="A_Style_TextBlock_Standard" TargetType="{x:Type TextBlock}" >
    <Setter Property="FontFamily" Value="{StaticResource Default}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="FontSize" Value="19" />
    <Setter Property="LineHeight" Value="20" />
    <Setter Property="Foreground" Value="#cccccc" />
    <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
  </Style>

  <Style x:Key="A_Style_TextBlock_Standard_Centered" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource A_Style_TextBlock_Standard}">
    <Setter Property="FontSize" Value="13" />
    <Setter Property="LineHeight" Value="13" />
    <Setter Property="TextAlignment" Value="Center" />
  </Style>

  <Style x:Key="A_Style_TextBlock_Standard_Team" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource A_Style_TextBlock_Standard}">
    <Setter Property="FontWeight" Value="Medium" />
  </Style>

  <DataTemplate x:Key="A_DataTemplate_BarProgress">
    <Grid>
      <Grid x:Name="BarBackground" Background="{Binding Foreground, Converter={StaticResource A_Converter_BackgroundColorTransform}, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}, Mode=FindAncestor}}" />
      <Grid HorizontalAlignment="Left" x:Name="BarForeground" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Background="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}, Mode=FindAncestor}}">
        <Grid.LayoutTransform>
          <ScaleTransform ScaleX="{Binding .}" />
        </Grid.LayoutTransform>
      </Grid>

      <Grid>
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" >
            <GradientStop Color="#44110000" Offset="0" />
            <GradientStop Color="#00110000" Offset="1" />
          </LinearGradientBrush>
        </Grid.Background>
      </Grid>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="A_DataTemplate_BarProgress_MonsterHP">
    <Grid>
      <Grid x:Name="BarBackground" Background="{Binding Foreground, Converter={StaticResource A_Converter_BackgroundColorTransform}, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}, Mode=FindAncestor}}" />
      <Grid HorizontalAlignment="Left" x:Name="BarForeground" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Background="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}, Mode=FindAncestor}}">
        <Grid.LayoutTransform>
          <ScaleTransform ScaleX="{Binding .}" />
        </Grid.LayoutTransform>

        <Border BorderBrush="#44ffffff" BorderThickness="3" />

      </Grid>

      <Grid>
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" >
            <GradientStop Color="#77110000" Offset="0" />
            <GradientStop Color="#00110000" Offset="1" />
          </LinearGradientBrush>
        </Grid.Background>
      </Grid>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="A_DataTemplate_CircleProgress" DataType="{x:Type coreData:Progress}">
    <Viewbox>
      <Grid Width="14" Height="14">
        <Ellipse StrokeThickness="4" Stroke="{Binding Foreground, Converter={StaticResource A_Converter_BackgroundColorTransform1}, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}, Mode=FindAncestor}}" />

        <Canvas Width="0" Height="0" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
          <Canvas.RenderTransform>
            <TranslateTransform X="-5" Y="-5" />
          </Canvas.RenderTransform>

          <Path StrokeThickness="4" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}, Mode=FindAncestor}}">
            <Path.Data>
              <PathGeometry>
                <PathFigure StartPoint="5,0">
                  <ArcSegment RotationAngle="0" SweepDirection="Clockwise" Size="5,5" 
                                                Point="{Binding Angle, ConverterParameter=5, Converter={StaticResource A_Converter_AngleToPoint}}"
                                                IsLargeArc="{Binding Angle, Converter={StaticResource A_Converter_AngleToIsLargeArc}}" />
                </PathFigure>
              </PathGeometry>
            </Path.Data>
          </Path>
        </Canvas>
      </Grid>
    </Viewbox>
  </DataTemplate>

  <DataTemplate x:Key="A_Graphic_Crown">
    <Viewbox>
      <Canvas RenderTransform="1.0, 0.0, 0.0, 1.0, 0, 0" Width="512.001" Height="512.001">
        <!-- Rim -->
        <Path Data="F1 M512.001,512.001z M0,0z M471.688,448.561L40.311,448.561C31.475,448.561,24.311,441.397,24.311,432.562L24.311,350.881C24.311,342.045,31.475,334.882,40.311,334.882L471.687,334.882C480.523,334.882,487.687,342.046,487.687,350.881L487.687,432.562C487.687,441.398,480.525,448.561,471.688,448.561z" Fill="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" />
        <Path Data="F1 M512.001,512.001z M0,0z M471.689,334.882L256,334.882 256,448.562 471.688,448.562C480.524,448.562,487.688,441.398,487.688,432.563L487.688,350.882C487.688,342.045,480.525,334.882,471.689,334.882z" Fill="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" />
        <!-- Body -->
        <Path Data="F1 M512.001,512.001z M0,0z M483.949,100.035L373.852,225.934 269.275,70.501C262.941,61.088,249.062,61.085,242.725,70.501L138.148,225.934 28.051,100.035C17.811,88.327,-1.473,96.733,0.0889999999999986,112.178L24.311,351.689 24.311,366.882C45.309,366.882,470.842,366.882,487.686,366.882L487.686,351.689 511.909,112.178C513.474,96.729,494.186,88.329,483.949,100.035z" Fill="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" />
        <Path Data="F1 M512.001,512.001z M0,0z M483.949,100.035L373.852,225.934 269.275,70.501C266.108,65.794,261.054,63.44,256.001,63.44L256.001,366.88C367.636,366.88,479.227,366.88,487.689,366.88L487.689,351.687 511.912,112.176C513.474,96.729,494.186,88.329,483.949,100.035z" Fill="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" />
        <!-- Gem -->
        <Path Data="F1 M512.001,512.001z M0,0z M256,308.407C227.366,308.407 204.071,285.112 204.071,256.478 204.071,227.844 227.366,204.549 256,204.549 284.635,204.549 307.93,227.844 307.93,256.478 307.931,285.112 284.634,308.407 256,308.407z" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" />
        <Path Data="F1 M512.001,512.001z M0,0z M307.929,256.478C307.929,227.844,284.634,204.549,256,204.549L256,308.407C284.634,308.407,307.929,285.111,307.929,256.478z" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" />
      </Canvas>
    </Viewbox>
  </DataTemplate>


  <!--Monster Widget Resources-->

  <Storyboard x:Key="A_Storyboard_Hide">
    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
      <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut"/>
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
    </DoubleAnimationUsingKeyFrames>

    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Visibility)">
      <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Collapsed}"/>
    </ObjectAnimationUsingKeyFrames>
  </Storyboard>

  <Storyboard x:Key="A_Storyboard_Show">
    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Visibility)">
      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
    </ObjectAnimationUsingKeyFrames>

    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
      <EasingDoubleKeyFrame KeyTime="00:00:00.15" Value="1">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseIn" Exponent="4" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>

  <DataTemplate x:Key="A_DataTemplate_SquareInfoGraphic">
    <Grid>
      <Grid.OpacityMask>
        <VisualBrush Visual="{Binding ElementName=Border1}" />
      </Grid.OpacityMask>
      <Border x:Name="Border1" CornerRadius="3" Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3 2 3 1">
          <TextBlock Text="{Binding .}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" FontSize="11" LineHeight="11">
            <TextBlock.RenderTransform>
              <TransformGroup>
                <TranslateTransform X="1" Y="1" />
              </TransformGroup>
            </TextBlock.RenderTransform>
          </TextBlock>

          <TextBlock Text="{Binding .}" Style="{StaticResource A_Style_TextBlock_Standard}" FontSize="12" LineHeight="12" Foreground="{Binding Foreground, FallbackValue=White, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" />
        </Grid>
      </Border>
    </Grid>
  </DataTemplate>

  <Storyboard x:Key="A_Storyboard_StatusEffect_Active" RepeatBehavior="Forever">
    <!--Exclamation Mark Bounce-->
    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IsActiveGraphic" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
      <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <EasingDoubleKeyFrame KeyTime="00:00:00.25" Value="0.75">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
      <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="1.5">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
      <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
      <EasingDoubleKeyFrame KeyTime="00:00:02" Value="1"/>
    </DoubleAnimationUsingKeyFrames>

    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IsActiveGraphic" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
      <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <EasingDoubleKeyFrame KeyTime="00:00:00.25" Value="0.75">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
      <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="1.5">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
      <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
      <EasingDoubleKeyFrame KeyTime="00:00:02" Value="1"/>
    </DoubleAnimationUsingKeyFrames>

    <!--Pulse Effect-->
    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pulse" Storyboard.TargetProperty="Opacity">
      <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
    </DoubleAnimationUsingKeyFrames>

    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pulse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
      <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <EasingDoubleKeyFrame KeyTime="00:00:00.25" Value="1">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
      <EasingDoubleKeyFrame KeyTime="00:00:01" Value="80">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
    </DoubleAnimationUsingKeyFrames>

    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pulse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
      <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <EasingDoubleKeyFrame KeyTime="00:00:00.25" Value="1">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
      <EasingDoubleKeyFrame KeyTime="00:00:01" Value="80">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>

  <DataTemplate DataType="{x:Type data:MonsterStatusEffect}">
    <StackPanel x:Name="Root" Margin="0 15 0 0" Visibility="Collapsed" Opacity="0">

      <StackPanel.Background>
        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" >
          <GradientStop Color="#99000000" Offset="0" />
          <GradientStop Color="#00000000" Offset="0.6" />
        </LinearGradientBrush>
      </StackPanel.Background>

      <DockPanel>
        <Grid>
          <TextBlock x:Name="NameBlockShadow" Text="{Binding Name}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
          <TextBlock x:Name="NameBlock" Text="{Binding Name}" Style="{StaticResource A_Style_TextBlock_Standard}" />
        </Grid>

        <ContentControl x:Name="TimesActivatedGraphic" Visibility="Collapsed" Margin="6 -3 0 0" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" ContentTemplate="{StaticResource A_DataTemplate_SquareInfoGraphic}">
          <ContentControl.Background>
            <SolidColorBrush Color="{Binding Source={StaticResource A_Color_Monster_StatusEffect_Bar}}" />
          </ContentControl.Background>
          <MultiBinding ConverterParameter="{}{0}" Converter="{StaticResource A_Converter_StringFormat}">
            <Binding Path="TimesActivatedCount" Mode="OneWay" />
          </MultiBinding>
        </ContentControl>

        <Grid x:Name="IsActiveContainer" Margin="6 -3 0 0" Visibility="Collapsed">
          <Ellipse x:Name="Pulse" Width="1" Height="1" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5 0.5" Fill="#FFFFF300">
            <Ellipse.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1" />
              </TransformGroup>
            </Ellipse.RenderTransform>
          </Ellipse>

          <ContentControl x:Name="IsActiveGraphic" Width="13" Content="!" VerticalAlignment="Center" HorizontalAlignment="Left" ContentTemplate="{StaticResource A_DataTemplate_SquareInfoGraphic}" RenderTransformOrigin="0.5 0.5" Background="#FFEED76F" Foreground="Black">
            <ContentControl.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1" />
              </TransformGroup>
            </ContentControl.RenderTransform>
          </ContentControl>
        </Grid>

        <Grid HorizontalAlignment="Right" Margin="12 0 0 0">
          <TextBlock x:Name="BuildupBlockShadow" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
                <Binding Path="Buildup.Current" Mode="OneWay" />
                <Binding Path="Buildup.Max" Mode="OneWay" />
                <Binding Path="Buildup.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <TextBlock x:Name="BuildupBlock" Style="{StaticResource A_Style_TextBlock_Standard}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
                <Binding Path="Buildup.Current" Mode="OneWay" />
                <Binding Path="Buildup.Max" Mode="OneWay" />
                <Binding Path="Buildup.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>

          <TextBlock x:Name="DurationBlockShadow" Visibility="Collapsed" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
                <Binding Path="Duration.Current" Mode="OneWay" />
                <Binding Path="Duration.Max" Mode="OneWay" />
                <Binding Path="Duration.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <TextBlock x:Name="DurationBlock" Visibility="Collapsed" Style="{StaticResource A_Style_TextBlock_Standard}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
                <Binding Path="Duration.Current" Mode="OneWay" />
                <Binding Path="Duration.Max" Mode="OneWay" />
                <Binding Path="Duration.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </Grid>
      </DockPanel>

      <ContentControl x:Name="Bar" Content="{Binding Buildup.Fraction}" ContentTemplate="{StaticResource A_DataTemplate_BarProgress}" Height="4" Margin="0 3 0 3">
        <ContentControl.Foreground>
          <SolidColorBrush Color="{StaticResource A_Color_Monster_StatusEffect_Bar}" />
        </ContentControl.Foreground>
      </ContentControl>
    </StackPanel>

    <DataTemplate.Triggers>
      <Trigger Property="pfComponentModel:DesignerProperties.IsInDesignMode" Value="True">
        <Setter TargetName="Root" Property="Visibility" Value="Visible" />
        <Setter TargetName="Root" Property="Opacity" Value="1" />
      </Trigger>

      <DataTrigger Binding="{Binding DataContext.ShowBars, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False">
        <Setter TargetName="Bar" Property="Visibility" Value="Collapsed" />
      </DataTrigger>

      <DataTrigger Binding="{Binding IsVisible}" Value="True">
        <DataTrigger.EnterActions>
          <StopStoryboard BeginStoryboardName="Hide" />
          <BeginStoryboard x:Name="Show" Storyboard="{StaticResource A_Storyboard_Show}" />
        </DataTrigger.EnterActions>
      </DataTrigger>

      <DataTrigger Binding="{Binding IsVisible}" Value="False">
        <DataTrigger.EnterActions>
          <StopStoryboard BeginStoryboardName="Show" />
          <BeginStoryboard x:Name="Hide" Storyboard="{StaticResource A_Storyboard_Hide}" />
        </DataTrigger.EnterActions>
      </DataTrigger>

      <DataTrigger Binding="{Binding TimesActivatedCount, Converter={StaticResource A_Converter_NumberGreater}}" Value="True">
        <Setter TargetName="TimesActivatedGraphic" Property="Visibility" Value="Visible" />
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="StatusEffect">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Monster_StatusEffect_Group_StatusEffect}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Rage">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Monster_StatusEffect_Group_Rage}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Stamina">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Monster_StatusEffect_Group_Stamina}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Fatigue">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Monster_StatusEffect_Group_Fatigue}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <!--When the UI needs to show the duration timer instead of the buildup timer with NO animations-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Duration.Fraction, ConverterParameter=1, Converter={StaticResource A_Converter_NumberNotEqual}}" Value="True" />
          <Condition Binding="{Binding Duration.Fraction, ConverterParameter=0, Converter={StaticResource A_Converter_NumberNotEqual}}" Value="True" />
          <Condition Binding="{Binding Duration.Max, ConverterParameter=0, Converter={StaticResource A_Converter_NumberNotEqual}}" Value="True" />
          <Condition Binding="{Binding DataContext.UseAnimations, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BuildupBlockShadow" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="BuildupBlock" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="DurationBlockShadow" Property="Visibility" Value="Visible" />
        <Setter TargetName="DurationBlock" Property="Visibility" Value="Visible" />

        <Setter TargetName="Bar" Property="Content" Value="{Binding Duration.Fraction}" />

        <Setter TargetName="IsActiveContainer" Property="Visibility" Value="Visible" />
      </MultiDataTrigger>

      <!--When the UI needs to show the duration timer instead of the buildup timer with animations-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Duration.Fraction, ConverterParameter=1, Converter={StaticResource A_Converter_NumberNotEqual}}" Value="True" />
          <Condition Binding="{Binding Duration.Fraction, ConverterParameter=0, Converter={StaticResource A_Converter_NumberNotEqual}}" Value="True" />
          <Condition Binding="{Binding Duration.Max, ConverterParameter=0, Converter={StaticResource A_Converter_NumberNotEqual}}" Value="True" />
          <Condition Binding="{Binding DataContext.UseAnimations, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
        </MultiDataTrigger.Conditions>

        <MultiDataTrigger.EnterActions>
          <BeginStoryboard x:Name="BeginActiveStoryboard" Storyboard="{StaticResource A_Storyboard_StatusEffect_Active}" />
        </MultiDataTrigger.EnterActions>

        <Setter TargetName="BuildupBlockShadow" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="BuildupBlock" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="DurationBlockShadow" Property="Visibility" Value="Visible" />
        <Setter TargetName="DurationBlock" Property="Visibility" Value="Visible" />

        <Setter TargetName="Bar" Property="Content" Value="{Binding Duration.Fraction}" />

        <Setter TargetName="IsActiveContainer" Property="Visibility" Value="Visible" />

      </MultiDataTrigger>

      <!--Show Numbers AND Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BuildupBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
              <Binding Path="Buildup.Current" Mode="OneWay" />
              <Binding Path="Buildup.Max" Mode="OneWay" />
              <Binding Path="Buildup.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="BuildupBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
              <Binding Path="Buildup.Current" Mode="OneWay" />
              <Binding Path="Buildup.Max" Mode="OneWay" />
              <Binding Path="Buildup.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="DurationBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
              <Binding Path="Duration.Current" Mode="OneWay" />
              <Binding Path="Duration.Max" Mode="OneWay" />
              <Binding Path="Duration.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="DurationBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
              <Binding Path="Duration.Current" Mode="OneWay" />
              <Binding Path="Duration.Max" Mode="OneWay" />
              <Binding Path="Duration.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show Numbers NOT Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BuildupBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0}">
              <Binding Path="Buildup.Current" Mode="OneWay" />
              <Binding Path="Buildup.Max" Mode="OneWay" />
              <Binding Path="Buildup.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="BuildupBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0}">
              <Binding Path="Buildup.Current" Mode="OneWay" />
              <Binding Path="Buildup.Max" Mode="OneWay" />
              <Binding Path="Buildup.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="DurationBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0}">
              <Binding Path="Duration.Current" Mode="OneWay" />
              <Binding Path="Duration.Max" Mode="OneWay" />
              <Binding Path="Duration.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="DurationBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0}">
              <Binding Path="Duration.Current" Mode="OneWay" />
              <Binding Path="Duration.Max" Mode="OneWay" />
              <Binding Path="Duration.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show NOT Numbers AND Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BuildupBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{2}">
              <Binding Path="Buildup.Current" Mode="OneWay" />
              <Binding Path="Buildup.Max" Mode="OneWay" />
              <Binding Path="Buildup.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="BuildupBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{2}">
              <Binding Path="Buildup.Current" Mode="OneWay" />
              <Binding Path="Buildup.Max" Mode="OneWay" />
              <Binding Path="Buildup.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="DurationBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{2}">
              <Binding Path="Duration.Current" Mode="OneWay" />
              <Binding Path="Duration.Max" Mode="OneWay" />
              <Binding Path="Duration.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="DurationBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{2}">
              <Binding Path="Duration.Current" Mode="OneWay" />
              <Binding Path="Duration.Max" Mode="OneWay" />
              <Binding Path="Duration.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show NOT Numbers NOT Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BuildupBlockShadow" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="BuildupBlock" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="DurationBlockShadow" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="DurationBlock" Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>

  <DataTemplate DataType="{x:Type data:MonsterPart}">
    <StackPanel x:Name="Root" Margin="0 15 0 0" Visibility="Collapsed" Opacity="0">

      <StackPanel.Background>
        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" >
          <GradientStop Color="#99000000" Offset="0" />
          <GradientStop Color="#00000000" Offset="0.6" />
        </LinearGradientBrush>
      </StackPanel.Background>

      <DockPanel>
        <Grid>
          <TextBlock x:Name="NameBlockShadow" Text="{Binding Name}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
          <TextBlock x:Name="NameBlock" Text="{Binding Name}" Style="{StaticResource A_Style_TextBlock_Standard}" />
        </Grid>

        <ContentControl x:Name="TimesBrokenGraphic" Visibility="Collapsed" Margin="6 -3 0 0" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" ContentTemplate="{StaticResource A_DataTemplate_SquareInfoGraphic}">
          <ContentControl.Background>
            <SolidColorBrush Color="{Binding Source={StaticResource A_Color_Monster_Part_Bar}}" />
          </ContentControl.Background>
          <MultiBinding ConverterParameter="{}{0}" Converter="{StaticResource A_Converter_StringFormat}">
            <Binding Path="TimesBrokenCount" Mode="OneWay" />
          </MultiBinding>
        </ContentControl>

        <Grid HorizontalAlignment="Right" Margin="12 0 0 0">
          <TextBlock x:Name="HealthBlockShadow" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
                <Binding Path="Health.Current" Mode="OneWay" />
                <Binding Path="Health.Max" Mode="OneWay" />
                <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>

          <TextBlock x:Name="HealthBlock" Style="{StaticResource A_Style_TextBlock_Standard}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
                <Binding Path="Health.Current" Mode="OneWay" />
                <Binding Path="Health.Max" Mode="OneWay" />
                <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </Grid>
      </DockPanel>

      <ContentControl x:Name="Bar" Content="{Binding Health.Fraction}" ContentTemplate="{StaticResource A_DataTemplate_BarProgress}" Height="4" Margin="0 3 0 3">
        <ContentControl.Foreground>
          <SolidColorBrush Color="{StaticResource A_Color_Monster_Part_Bar}" />
        </ContentControl.Foreground>
      </ContentControl>
    </StackPanel>

    <DataTemplate.Triggers>
      <Trigger Property="pfComponentModel:DesignerProperties.IsInDesignMode" Value="True">
        <Setter TargetName="Root" Property="Visibility" Value="Visible" />
        <Setter TargetName="Root" Property="Opacity" Value="1" />
      </Trigger>

      <DataTrigger Binding="{Binding DataContext.ShowBars, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False">
        <Setter TargetName="Bar" Property="Visibility" Value="Collapsed" />
      </DataTrigger>

      <DataTrigger Binding="{Binding IsVisible}" Value="True">
        <DataTrigger.EnterActions>
          <StopStoryboard BeginStoryboardName="Hide" />
          <BeginStoryboard x:Name="Show" Storyboard="{StaticResource A_Storyboard_Show}" />
        </DataTrigger.EnterActions>
      </DataTrigger>

      <DataTrigger Binding="{Binding IsVisible}" Value="False">
        <DataTrigger.EnterActions>
          <StopStoryboard BeginStoryboardName="Show" />
          <BeginStoryboard x:Name="Hide" Storyboard="{StaticResource A_Storyboard_Hide}" />
        </DataTrigger.EnterActions>
      </DataTrigger>

      <DataTrigger Binding="{Binding TimesBrokenCount, Converter={StaticResource A_Converter_NumberGreater}}" Value="True">
        <Setter TargetName="TimesBrokenGraphic" Property="Visibility" Value="Visible" />
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Part">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Monster_Part_Group_Part}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Removable">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Monster_Part_Group_Removable}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <!--Show Numbers AND Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HealthBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="HealthBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show Numbers NOT Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HealthBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0}">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="HealthBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0}">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show NOT Numbers AND Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HealthBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{2}">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="HealthBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{2}">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show NOT Numbers NOT Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HealthBlockShadow" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="HealthBlock" Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>

  <DataTemplate DataType="{x:Type data:Monster}">
    <StackPanel x:Name="Root" Width="{StaticResource MonsterWidget_length}" Visibility="Collapsed" Opacity="0" Margin="30 0 30 0">
      <StackPanel.Resources>
        <CollectionViewSource x:Key="CollectionViewSource" Source="{Binding Parts}" IsLiveSortingRequested="True">
          <CollectionViewSource.LiveSortingProperties>
            <system:String>Damage</system:String>
          </CollectionViewSource.LiveSortingProperties>
          <CollectionViewSource.SortDescriptions>
            <wbComponentModel:SortDescription PropertyName="IsRemovable" Direction="Descending" />
          </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
      </StackPanel.Resources>

      <StackPanel>
        <StackPanel HorizontalAlignment="Center">
          <Grid x:Name="Crown" Height="20">
            <Grid x:Name="InnerCrown" VerticalAlignment="Bottom">
              <ContentControl ContentTemplate="{StaticResource A_Graphic_Crown}" Background="#000000" Foreground="#000000" Opacity="0.5" RenderTransform="{StaticResource A_Transform_DropShadow}" />

              <ContentControl x:Name="Icon" ContentTemplate="{StaticResource A_Graphic_Crown}">
                <ContentControl.Background>
                  <SolidColorBrush Color="{StaticResource A_Color_Crown_Gold_Body}" />
                </ContentControl.Background>
                <ContentControl.Foreground>
                  <SolidColorBrush Color="{StaticResource A_Color_Crown_Gold_Gem}" />
                </ContentControl.Foreground>
              </ContentControl>
            </Grid>
          </Grid>
          <!--Size-->
          <Grid x:Name="Size" VerticalAlignment="Bottom">
            <TextBlock Text="{Binding Size, StringFormat=\{0:N2\}}" Style="{StaticResource A_Style_TextBlock_Standard_Centered}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
            <TextBlock Text="{Binding Size, StringFormat=\{0:N2\}}" Style="{StaticResource A_Style_TextBlock_Standard_Centered}" />
          </Grid>
          <!--/Size-->

          <!--/Monster Icon-->
          <Grid VerticalAlignment="Bottom">
            <Canvas x:Name="Monster_Icon" VerticalAlignment="Center" HorizontalAlignment="Center" Height="75" Margin="-80 0 0 10">
              <Border x:Name="background" BorderBrush="#66000000" BorderThickness="3" Background="#66888888" CornerRadius="12" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image HorizontalAlignment="center" VerticalAlignment="Center" Width="70" Height="70" Margin="3">
                  <Image.Style>
                    <Style TargetType="{x:Type Image}">
                      <Style.Setters>
                        <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/unknown.png"/>
                      </Style.Setters>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Id}" Value="em037_00">
                          <!--/Nargacuga-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/47.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em125_00">
                          <!--/Namielle-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/75.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em126_00">
                          <!--/Shara Ishvalda-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/76.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em123_00">
                          <!--/Banbaro-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/69.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em032_00">
                          <!--/Tigrex-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/73.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em032_01">
                          <!--/Brute Tigrex-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/82.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em057_00">
                          <!--/Zinogre-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/83.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em110_01">
                          <!--/Nightshade Paolumu-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/44.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em113_01">
                          <!--/Ebony Odogaron-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/45.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em100_01">
                          <!--/Fulgur Anjanath-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/43.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em102_01">
                          <!--/Coral Pukei-Pukei-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/41.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em063_00">
                          <!--/Brachydios-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/72.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em063_05">
                          <!--/Raging Brachydios-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/122.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em124_00">
                          <!--/Velkhana-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/74.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em122_00">
                          <!--/Beotodus-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/40.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em080_00">
                          <!--/Glavenus-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/70.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em080_01">
                          <!--/Acidic Glavenus-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/71.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em115_05">
                          <!--/Blackveil Vaal Hazak-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/81.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em042_00">
                          <!--/Barioth-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/46.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em043_05">
                          <!--/Savage Deviljho-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/79.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em103_05">
                          <!--/Ruiner Nergigante-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/80.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em109_01">
                          <!--/Viper Tobi Kadachi-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/42.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em111_05">
                          <!--/Shrieking Legiana-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/77.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em118_05">
                          <!--/Seething Bazelgeuse-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/78.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em018_00">
                          <!--/Yian Garuga-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/85.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em018_05">
                          <!--/Scarred Yian Garuga-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/68.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em001_02">
                          <!--/Gold Rathian-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/86.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em002_02">
                          <!--/Silver Rathalos-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/87.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em023_00">
                          <!--/Rajang-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/120.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em023_05">
                          <!--/Furious Rajang-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/121.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em057_01">
                          <!--/Stygian Zinogre-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/84.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em104_00">
                          <!--/Safi'jiiva-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/123.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em100_00">
                          <!--/Anjanath-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/0.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em002_01">
                          <!--/Azure Rathalos-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/27.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em044_00">
                          <!--/Barroth-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/37.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em118_00">
                          <!--/Bazelgeuse-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/19.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em121_00">
                          <!--/Behemoth-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/20.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em007_01">
                          <!--/Black Diablos-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/29.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em043_00">
                          <!--/Deviljho-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/36.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em007_00">
                          <!--/Diablos-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/28.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em116_00">
                          <!--/Dodogama-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/17.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em112_00">
                          <!--/Great Girros-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/13.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em101_00">
                          <!--/Great Jagras-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/1.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em108_00">
                          <!--/Jyuratodus-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/9.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em011_00">
                          <!--/Kirin-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/30.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em107_00">
                          <!--/Kulu-Ya-Ku-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/7.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em117_00">
                          <!--/Kulve Taroth-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/18.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em024_00">
                          <!--/Kushala Daora-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/32.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em036_00">
                          <!--/Lavasioth-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/35.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em111_00">
                          <!--/Legiana-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/12.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em026_00">
                          <!--/Lunastra-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/33.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em103_00">
                          <!--/Nergigante-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/3.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em113_00">
                          <!--/Odogaron-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/14.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em110_00">
                          <!--/Paolumu-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/11.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em001_01">
                          <!--/Pink Rathian-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/25.PNG"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em102_00">
                          <!--/Pukei-Pukei-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/2.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em114_00">
                          <!--/Radobaan-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/15.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em002_00">
                          <!--/Rathalos-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/26.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em001_00">
                          <!--/Rathian-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/24.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em027_00">
                          <!--/Teostra-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/34.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em109_00">
                          <!--/Tobi-Kadachi-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/10.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em120_00">
                          <!--/Tzitzi-Ya-Ku-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/8.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em045_00">
                          <!--/Uragaan-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/38.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em115_00">
                          <!--/Vaal Hazak-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/16.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em105_00">
                          <!--/Xeno'jiiva-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/4.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em106_00">
                          <!--/Zorah Magdaros-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/6.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em127_00">
                          <!--/Leshen-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/21.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Id}" Value="em127_01">
                          <!--/Ancient Leshen-->
                          <Setter Property="Source" Value="pack://siteoforigin:,,,/Icon/22.png"/>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Image.Style>
                </Image>
              </Border>
            </Canvas>
          </Grid>
          <!--/Monster Icon-->
          <!--Monster Name-->
          <Grid VerticalAlignment="Bottom">
            <TextBlock Text="{Binding Name}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
            <TextBlock Text="{Binding Name}" Style="{StaticResource A_Style_TextBlock_Standard}" />
          </Grid>
          <!--/Monster Name-->
        </StackPanel>

        <Grid Margin="0 5 0 0">
          <ContentControl x:Name="HealthBar" Content="{Binding Health.Fraction}" ContentTemplate="{StaticResource A_DataTemplate_BarProgress_MonsterHP}" Height="25" Margin="0 0 0 2" >
            <ContentControl.Foreground>
              <SolidColorBrush Color="{StaticResource A_Color_Monster_Bar}" />
            </ContentControl.Foreground>
          </ContentControl>

          <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 2 0 0">
            <TextBlock x:Name="HealthBlockShadow" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}">
              <TextBlock.Text>
                <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
                  <Binding Path="Health.Current" Mode="OneWay" />
                  <Binding Path="Health.Max" Mode="OneWay" />
                  <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
            <TextBlock x:Name="HealthBlock" Style="{StaticResource A_Style_TextBlock_Standard}">
              <TextBlock.Text>
                <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
                  <Binding Path="Health.Current" Mode="OneWay" />
                  <Binding Path="Health.Max" Mode="OneWay" />
                  <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
          </Grid>
        </Grid>
      </StackPanel>

      <ItemsControl x:Name="PartsControl" ItemsSource="{Binding Source={StaticResource CollectionViewSource}}" />
      <ItemsControl ItemsSource="{Binding StatusEffects}" />
    </StackPanel>

    <DataTemplate.Triggers>
      <Trigger Property="pfComponentModel:DesignerProperties.IsInDesignMode" Value="True">
        <Setter TargetName="Root" Property="Visibility" Value="Visible" />
        <Setter TargetName="Root" Property="Opacity" Value="1" />
        <Setter TargetName="PartsControl" Property="ItemsSource" Value="{Binding Parts}" />
      </Trigger>

      <DataTrigger Binding="{Binding IsVisible}" Value="True">
        <DataTrigger.EnterActions>
          <StopStoryboard BeginStoryboardName="Hide" />
          <BeginStoryboard x:Name="Show" Storyboard="{StaticResource A_Storyboard_Show}" />
        </DataTrigger.EnterActions>
      </DataTrigger>

      <DataTrigger Binding="{Binding IsVisible}" Value="False">
        <DataTrigger.EnterActions>
          <StopStoryboard BeginStoryboardName="Show" />
          <BeginStoryboard x:Name="Hide" Storyboard="{StaticResource A_Storyboard_Hide}" />
        </DataTrigger.EnterActions>
      </DataTrigger>

      <DataTrigger Binding="{Binding DataContext.ShowCrown, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False">
        <Setter TargetName="Crown" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding DataContext.ShowBars, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False">
        <Setter TargetName="HealthBar" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding DataContext.ShowSize, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False">
        <Setter TargetName="Size" Property="Visibility" Value="Collapsed" />
      </DataTrigger>

      <!--Show Numbers AND Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HealthBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="HealthBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0} ({2})">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show Numbers NOT Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HealthBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0}">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="HealthBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}/{1:0}">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show NOT Numbers AND Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HealthBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{2}">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="HealthBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{2}">
              <Binding Path="Health.Current" Mode="OneWay" />
              <Binding Path="Health.Max" Mode="OneWay" />
              <Binding Path="Health.Fraction" Converter="{StaticResource A_Converter_FractionToPercentage}" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show NOT Numbers NOT Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HealthBlockShadow" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="HealthBlock" Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>

      <DataTrigger Binding="{Binding Crown, ConverterParameter={x:Static data:MonsterCrown.None}, Converter={StaticResource A_Converter_EnumComparison}}" Value="True">
        <Setter TargetName="InnerCrown" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Crown, ConverterParameter={x:Static data:MonsterCrown.Silver}, Converter={StaticResource A_Converter_EnumComparison}}" Value="True">
        <Setter TargetName="Icon" Property="Background">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Crown_Silver_Body}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="Icon" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Crown_Silver_Gem}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger Binding="{Binding Crown, ConverterParameter={x:Static data:MonsterCrown.Mini}, Converter={StaticResource A_Converter_EnumComparison}}" Value="True">
        <Setter TargetName="InnerCrown" Property="Width" Value="12" />
        <Setter TargetName="InnerCrown" Property="Height" Value="12" />
        <Setter TargetName="Icon" Property="Background">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Crown_Mini_Body}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="Icon" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Crown_Mini_Gem}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>


  <!--Team Widget Resources-->

  <DataTemplate DataType="{x:Type data:Player}">
    <Grid x:Name="Root">

      <Grid.Background>
        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0" >
          <GradientStop Color="#aa000000" Offset="0" />
          <GradientStop Color="#00000000" Offset="1" />
        </LinearGradientBrush>
      </Grid.Background>

      <ContentControl x:Name="Bar" Content="{Binding BarFraction}" ContentTemplate="{StaticResource A_DataTemplate_BarProgress}" Foreground="#000000" Margin="0 25 0 4" />
      <DockPanel Margin="5 3 5 10" Width="{StaticResource TeamWidget_length}">
        <Grid>
          <TextBlock x:Name="HunterName1" Text="{Binding Name}" Style="{StaticResource A_Style_TextBlock_Standard_Team}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
          <TextBlock x:Name="HunterName" Text="{Binding Name}" Style="{StaticResource A_Style_TextBlock_Standard_Team}" />
        </Grid>
        <Grid x:Name="DescriptionContainer" HorizontalAlignment="Right">
          <TextBlock x:Name="DescriptionBlockShadow" Style="{StaticResource A_Style_TextBlock_Standard_Team}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:#,0} ({1})">
                <Binding Path="Damage" Mode="OneWay" />
                <Binding Path="DamageFraction" Mode="OneWay" Converter="{StaticResource A_Converter_FractionToPercentage}" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <TextBlock x:Name="DescriptionBlock" Style="{StaticResource A_Style_TextBlock_Standard_Team}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:#,0} ({1})">
                <Binding Path="Damage" Mode="OneWay" />
                <Binding Path="DamageFraction" Mode="OneWay" Converter="{StaticResource A_Converter_FractionToPercentage}" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </Grid>
      </DockPanel>
    </Grid>

    <DataTemplate.Triggers>
      <!--Show Numbers AND Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="DescriptionBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0} ({1})">
              <Binding Path="Damage" Mode="OneWay" />
              <Binding Path="DamageFraction" Mode="OneWay" Converter="{StaticResource A_Converter_FractionToPercentage}" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="DescriptionBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0} ({1})">
              <Binding Path="Damage" Mode="OneWay" />
              <Binding Path="DamageFraction" Mode="OneWay" Converter="{StaticResource A_Converter_FractionToPercentage}" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show Numbers NOT Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="DescriptionBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0}">
              <Binding Path="Damage" Mode="OneWay" />
              <Binding Path="DamageFraction" Mode="OneWay" Converter="{StaticResource A_Converter_FractionToPercentage}" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="DescriptionBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0}">
              <Binding Path="Damage" Mode="OneWay" />
              <Binding Path="DamageFraction" Mode="OneWay" Converter="{StaticResource A_Converter_FractionToPercentage}" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show NOT Numbers AND Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="DescriptionBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{1}">
              <Binding Path="Damage" Mode="OneWay" />
              <Binding Path="DamageFraction" Mode="OneWay" Converter="{StaticResource A_Converter_FractionToPercentage}" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter TargetName="DescriptionBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{1}">
              <Binding Path="Damage" Mode="OneWay" />
              <Binding Path="DamageFraction" Mode="OneWay" Converter="{StaticResource A_Converter_FractionToPercentage}" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </MultiDataTrigger>

      <!--Show NOT Numbers NOT Percents-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding DataContext.ShowNumbers, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
          <Condition Binding="{Binding DataContext.ShowPercents, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="DescriptionContainer" Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>

      <DataTrigger Binding="{Binding DataContext.ShowBars, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False">
        <Setter TargetName="Bar" Property="Visibility" Value="Hidden" />
      </DataTrigger>

      <DataTrigger Binding="{Binding Damage}" Value="0">
        <Setter TargetName="DescriptionContainer" Property="Visibility" Value="Collapsed" />
      </DataTrigger>

      <DataTrigger Binding="{Binding ., Converter={StaticResource A_Converter_PlayerToPlayerIndex}}" Value="0">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_0}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger Binding="{Binding ., Converter={StaticResource A_Converter_PlayerToPlayerIndex}}" Value="1">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_1}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger Binding="{Binding ., Converter={StaticResource A_Converter_PlayerToPlayerIndex}}" Value="2">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_2}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger Binding="{Binding ., Converter={StaticResource A_Converter_PlayerToPlayerIndex}}" Value="3">
        <Setter TargetName="Bar" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_3}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Name}" Value="{StaticResource My_HunterName}" />
          <Condition Binding="{Binding ., Converter={StaticResource A_Converter_PlayerToPlayerIndex}}" Value="0" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HunterName" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_0}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="DescriptionBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_0}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="HunterName1" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="HunterName" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="DescriptionBlockShadow" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="DescriptionBlock" Property="FontWeight" Value="Bold"/>
      </MultiDataTrigger>

      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Name}" Value="{StaticResource My_HunterName}" />
          <Condition Binding="{Binding ., Converter={StaticResource A_Converter_PlayerToPlayerIndex}}" Value="1" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HunterName" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_1}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="DescriptionBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_1}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="HunterName1" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="HunterName" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="DescriptionBlockShadow" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="DescriptionBlock" Property="FontWeight" Value="Bold"/>
      </MultiDataTrigger>

      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Name}" Value="{StaticResource My_HunterName}" />
          <Condition Binding="{Binding ., Converter={StaticResource A_Converter_PlayerToPlayerIndex}}" Value="2" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HunterName" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_2}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="DescriptionBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_2}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="HunterName1" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="HunterName" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="DescriptionBlockShadow" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="DescriptionBlock" Property="FontWeight" Value="Bold"/>
      </MultiDataTrigger>

      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Name}" Value="{StaticResource My_HunterName}" />
          <Condition Binding="{Binding ., Converter={StaticResource A_Converter_PlayerToPlayerIndex}}" Value="3" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="HunterName" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_3}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="DescriptionBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_Player_3}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="HunterName1" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="HunterName" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="DescriptionBlockShadow" Property="FontWeight" Value="Bold"/>
        <Setter TargetName="DescriptionBlock" Property="FontWeight" Value="Bold"/>
      </MultiDataTrigger>

    </DataTemplate.Triggers>
  </DataTemplate>


  <!--Player Widget Resources-->

  <Storyboard x:Key="A_Storyboard_Player_StatusEffect_Hide">
    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
      <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut"/>
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
    </DoubleAnimationUsingKeyFrames>

    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Visibility)">
      <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Collapsed}"/>
    </ObjectAnimationUsingKeyFrames>
  </Storyboard>

  <Storyboard x:Key="A_Storyboard_Player_StatusEffect_Show">
    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Visibility)">
      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
    </ObjectAnimationUsingKeyFrames>

    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
      <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
    </DoubleAnimationUsingKeyFrames>

    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
      <EasingDoubleKeyFrame KeyTime="00:00:00" Value="-25"/>
      <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0">
        <EasingDoubleKeyFrame.EasingFunction>
          <ExponentialEase EasingMode="EaseOut" />
        </EasingDoubleKeyFrame.EasingFunction>
      </EasingDoubleKeyFrame>
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>

  <DataTemplate DataType="{x:Type data:PlayerStatusEffect}">
    <StackPanel x:Name="Root" Margin="0 0 0 8" Visibility="Collapsed" Opacity="0">

      <StackPanel.RenderTransform>
        <TransformGroup>
          <TranslateTransform X="0" />
        </TransformGroup>
      </StackPanel.RenderTransform>

      <StackPanel Orientation="Horizontal">
        <ContentControl x:Name="CircleProgress" Content="{Binding Time}" Width="20" Height="20" ContentTemplate="{StaticResource A_DataTemplate_CircleProgress}" />

        <Grid Margin="7 0 0 0">

          <Grid.Background>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" >
              <GradientStop Color="#00000000" Offset="0" />
              <GradientStop Color="#99000000" Offset="0.2" />
              <GradientStop Color="#99000000" Offset="0.8" />
              <GradientStop Color="#00000000" Offset="1" />
            </LinearGradientBrush>
          </Grid.Background>

          <TextBlock x:Name="NameBlockShadow" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:0} ({1:0})">
                <Binding Path="Name" Mode="OneWay" />
                <Binding Path="Time.Current" Mode="OneWay" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>

          <TextBlock x:Name="NameBlock" Style="{StaticResource A_Style_TextBlock_Standard}">
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0:0} ({1:0})">
                <Binding Path="Name" Mode="OneWay" />
                <Binding Path="Time.Current" Mode="OneWay" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </Grid>
      </StackPanel>
    </StackPanel>

    <DataTemplate.Triggers>
      <Trigger Property="pfComponentModel:DesignerProperties.IsInDesignMode" Value="True">
        <Setter TargetName="Root" Property="Visibility" Value="Visible" />
        <Setter TargetName="Root" Property="Opacity" Value="1" />
      </Trigger>

      <DataTrigger Binding="{Binding Time}" Value="{x:Null}">
        <Setter TargetName="CircleProgress" Property="Visibility" Value="Hidden" />
      </DataTrigger>

      <DataTrigger Binding="{Binding IsVisible}" Value="True">
        <DataTrigger.EnterActions>
          <StopStoryboard BeginStoryboardName="Hide" />
          <BeginStoryboard x:Name="Show" Storyboard="{StaticResource A_Storyboard_Player_StatusEffect_Show}" />
        </DataTrigger.EnterActions>
      </DataTrigger>

      <DataTrigger Binding="{Binding IsVisible}" Value="False">
        <DataTrigger.EnterActions>
          <StopStoryboard BeginStoryboardName="Show" />
          <BeginStoryboard x:Name="Hide" Storyboard="{StaticResource A_Storyboard_Player_StatusEffect_Hide}" />
        </DataTrigger.EnterActions>
      </DataTrigger>

      <DataTrigger Binding="{Binding Time}" Value="{x:Null}">
        <Setter TargetName="NameBlockShadow" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}">
              <Binding Path="Name" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>

        <Setter TargetName="NameBlock" Property="Text">
          <Setter.Value>
            <MultiBinding StringFormat="{}{0:0}">
              <Binding Path="Name" Mode="OneWay" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Debuff">
        <Setter TargetName="NameBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Debuff}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="CircleProgress" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Debuff_Circle}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Equipment">
        <Setter TargetName="NameBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Equipment}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="CircleProgress" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Equipment_Circle}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Equipment_RECHARGE">
        <Setter TargetName="NameBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Equipment_RECHARGE}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="CircleProgress" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Equipment_RECHARGE_Circle}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Buff">
        <Setter TargetName="NameBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Buff}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="CircleProgress" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Buff_Circle}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Horn">
        <Setter TargetName="NameBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Horn}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="CircleProgress" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Horn_Circle}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Coral">
        <Setter TargetName="NameBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Coral}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="CircleProgress" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Coral_Circle}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>

      <DataTrigger Binding="{Binding GroupId}" Value="Weapon">
        <Setter TargetName="NameBlock" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Weapon}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="CircleProgress" Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource A_Color_PlayerStatusEffect_Group_Weapon_Circle}" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>


  <!--Widget Controls-->

  <Style x:Key="A_Style_ItemsControl_Monsters" TargetType="{x:Type ItemsControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate DataType="{x:Type widgetContexts:MonsterWidgetContext}">
    <Grid HorizontalAlignment="left">

      <Grid.Resources>
        <CollectionViewSource x:Key="CollectionViewSource" Source="{Binding Monsters}" />
      </Grid.Resources>

      <Grid.Opacity>
        <StaticResource ResourceKey="A_Double_Widget_Opacity"/>
      </Grid.Opacity>
      <Grid.Background>
        <SolidColorBrush Color="{StaticResource A_Color_Widget_Background}" />
      </Grid.Background>

      <ItemsControl x:Name="MonstersControl" ItemsSource="{Binding Source={StaticResource CollectionViewSource}}" Style="{StaticResource A_Style_ItemsControl_Monsters}" />
    </Grid>

    <DataTemplate.Triggers>
      <Trigger Property="pfComponentModel:DesignerProperties.IsInDesignMode" Value="True">
        <Setter TargetName="MonstersControl" Property="ItemsSource" Value="{Binding Monsters}" />
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>

  <Style x:Key="A_Style_ItemsControl_PlayerStatusEffects" TargetType="{x:Type ItemsControl}">
    <Setter Property="MinWidth" Value="200" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel ClipToBounds="False" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate DataType="{x:Type widgetContexts:PlayerWidgetContext}">
    <Grid>
      <Grid.Resources>
        <CollectionViewSource x:Key="CollectionViewSource" Source="{Binding StatusEffects}" IsLiveSortingRequested="True">
          <CollectionViewSource.LiveSortingProperties>
            <system:String>Time</system:String>
            <system:String>Time.Current</system:String>
          </CollectionViewSource.LiveSortingProperties>
          <CollectionViewSource.SortDescriptions>
            <wbComponentModel:SortDescription PropertyName="Time" Direction="Descending" />
            <wbComponentModel:SortDescription PropertyName="Time.Current" Direction="Ascending" />
          </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
      </Grid.Resources>

      <Grid.Opacity>
        <StaticResource ResourceKey="A_Double_Widget_Opacity"/>
      </Grid.Opacity>
      <Grid.Background>
        <SolidColorBrush Color="{StaticResource A_Color_Widget_Background}" />
      </Grid.Background>

      <ItemsControl x:Name="StatusEffectsControl" ItemsSource="{Binding Source={StaticResource CollectionViewSource}}" Style="{StaticResource A_Style_ItemsControl_PlayerStatusEffects}" />
    </Grid>

    <DataTemplate.Triggers>
      <Trigger Property="pfComponentModel:DesignerProperties.IsInDesignMode" Value="True">
        <Setter TargetName="StatusEffectsControl" Property="ItemsSource" Value="{Binding StatusEffects}" />
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>

  <Style x:Key="A_Style_ItemsControl_Players" TargetType="{x:Type ItemsControl}">
    <Setter Property="MinWidth" Value="200" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate DataType="{x:Type widgetContexts:TeamWidgetContext}">
    <Grid Margin="0 0 0 30">

      <Grid.Resources>
        <CollectionViewSource x:Key="CollectionViewSource" Source="{Binding Fake_Players}" IsLiveSortingRequested="True">
          <CollectionViewSource.LiveSortingProperties>
            <system:String>Damage</system:String>
          </CollectionViewSource.LiveSortingProperties>
          <CollectionViewSource.SortDescriptions>
            <wbComponentModel:SortDescription PropertyName="Damage" Direction="Descending" />
            <wbComponentModel:SortDescription PropertyName="Index" Direction="Ascending" />
          </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
      </Grid.Resources>

      <Grid.Opacity>
        <StaticResource ResourceKey="A_Double_Widget_Opacity"/>
      </Grid.Opacity>
      <Grid.Background>
        <SolidColorBrush Color="{StaticResource A_Color_Widget_Background}" />
      </Grid.Background>

      <ItemsControl x:Name="PlayersControl" ItemsSource="{Binding Source={StaticResource CollectionViewSource}}" Style="{StaticResource A_Style_ItemsControl_Players}" />
    </Grid>

    <DataTemplate.Triggers>
      <Trigger Property="pfComponentModel:DesignerProperties.IsInDesignMode" Value="True">
        <Setter TargetName="PlayersControl" Property="ItemsSource" Value="{Binding Fake_Players}" />
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>

  <DataTemplate DataType="{x:Type widgetContexts:DebugWidgetContext}">
    <Grid Margin="0 23 0 0">
      <Grid.RowDefinitions>
        <RowDefinition/>
        <RowDefinition/>
        <RowDefinition/>
        <RowDefinition/>
        <RowDefinition/>
        <RowDefinition/>
      </Grid.RowDefinitions>

      <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding CurrentGame.CurrentPlayerName, StringFormat=Player: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
      <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding CurrentGame.CurrentPlayerName, StringFormat=Player: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" />

      <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding CurrentGame.SessionID, StringFormat=Session ID: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
      <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding CurrentGame.SessionID, StringFormat=Session ID: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" />

      <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding CurrentGame.SessionHostPlayerName, StringFormat=Session Host: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
      <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding CurrentGame.SessionHostPlayerName, StringFormat=Session Host: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" />

      <TextBlock Grid.Row="3" Grid.Column="0" Text="{Binding CurrentGame.LobbyID, StringFormat=Lobby ID: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
      <TextBlock Grid.Row="3" Grid.Column="0" Text="{Binding CurrentGame.LobbyID, StringFormat=Lobby ID: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" />

      <TextBlock Grid.Row="4" Grid.Column="0" Text="{Binding CurrentGame.LobbyHostPlayerName, StringFormat=Lobby Host: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
      <TextBlock Grid.Row="4" Grid.Column="0" Text="{Binding CurrentGame.LobbyHostPlayerName, StringFormat=Lobby Host: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" />

      <TextBlock Grid.Row="5" Grid.Column="0" Text="{Binding CurrentGame.EquippedWeaponType, Converter={StaticResource A_Converter_WeaponTypeToName}, StringFormat=Weapon Type: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" Foreground="{StaticResource A_Brush_DropShadow}" RenderTransform="{StaticResource A_Transform_DropShadow}" />
      <TextBlock Grid.Row="5" Grid.Column="0" Text="{Binding CurrentGame.EquippedWeaponType, Converter={StaticResource A_Converter_WeaponTypeToName}, StringFormat=Weapon Type: {0:C}}" Style="{StaticResource A_Style_TextBlock_Standard}" />

      <Grid.Opacity>
        <StaticResource ResourceKey="A_Double_Widget_Opacity"/>
      </Grid.Opacity>
      <Grid.Background>
        <SolidColorBrush Color="{StaticResource A_Color_Widget_Background}" />
      </Grid.Background>

    </Grid>
  </DataTemplate>
</ResourceDictionary>
